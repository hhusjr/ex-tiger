State 89 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 decs: dec decs
    3     | /* empty */

    4 dec: tydec
    5    | vardec
    6    | fundec

    7 tydec: TYPE ID EQ ty

    8 ty: ID
    9   | LBRACE tyfields RBRACE
   10   | ARRAY OF ID

   11 tyfields: /* empty */
   12         | tyfieldlist

   13 tyfieldlist: ID COLON ID
   14            | tyfieldlist COMMA ID COLON ID

   15 vardec: VAR ID ASSIGN exp
   16       | VAR ID COLON ID ASSIGN exp

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   18       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   19 exp: lvalue
   20    | NIL
   21    | LPAREN exp SEMICOLON seq RPAREN
   22    | LPAREN RPAREN
   23    | INT
   24    | STRING
   25    | MINUS exp
   26    | ID LPAREN RPAREN
   27    | ID LPAREN parlist RPAREN
   28    | exp PLUS exp
   29    | exp MINUS exp
   30    | exp TIMES exp
   31    | exp DIVIDE exp
   32    | exp EQ exp
   33    | exp NEQ exp
   34    | exp GT exp
   35    | exp LT exp
   36    | exp GE exp
   37    | exp LE exp
   38    | exp AND exp
   39    | exp OR exp
   40    | ID LBRACE itemlist RBRACE
   41    | ID LBRACE RBRACE
   42    | ID LBRACK exp RBRACK OF exp
   43    | lvalue ASSIGN exp
   44    | IF exp THEN exp ELSE exp
   45    | IF exp THEN exp
   46    | WHILE exp DO exp
   47    | FOR ID ASSIGN exp TO exp DO exp
   48    | BREAK
   49    | LET decs IN seq END
   50    | LET decs IN END
   51    | LPAREN exp RPAREN

   52 lvalue: ID
   53       | lvalue DOT ID
   54       | arridx

   55 arridx: ID LBRACK exp RBRACK
   56       | arridx LBRACK exp RBRACK

   57 seq: exp
   58    | seq SEMICOLON exp

   59 parlist: exp
   60        | parlist COMMA exp

   61 itemlist: ID EQ exp
   62         | itemlist COMMA ID EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 10 13 14 15 16 17 18 26 27 40 41 42 47 52 53 55 61 62
STRING (259) 24
INT (260) 23
COMMA (261) 14 60 62
COLON (262) 13 14 16 18
SEMICOLON (263) 21 58
LPAREN (264) 17 18 21 22 26 27 51
RPAREN (265) 17 18 21 22 26 27 51
LBRACK (266) 42 55 56
RBRACK (267) 42 55 56
LBRACE (268) 9 40 41
RBRACE (269) 9 40 41
DOT (270) 53
PLUS (271) 28
MINUS (272) 25 29
TIMES (273) 30
DIVIDE (274) 31
EQ (275) 7 17 18 32 61 62
NEQ (276) 33
LT (277) 35
LE (278) 37
GT (279) 34
GE (280) 36
AND (281) 38
OR (282) 39
ASSIGN (283) 15 16 43 47
ARRAY (284) 10
IF (285) 44 45
THEN (286) 44 45
ELSE (287) 44
WHILE (288) 46
FOR (289) 47
TO (290) 47
DO (291) 46 47
LET (292) 49 50
IN (293) 49 50
END (294) 49 50
OF (295) 10 42
BREAK (296) 48
NIL (297) 20
FUNCTION (298) 17 18
VAR (299) 15 16
TYPE (300) 7
ARRAYDECLSTMT (301)
FORSTMT (302)
WHILESTMT (303)
IFELSESTMT (304)
IFSTMT (305)
NEGATIVE (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
decs (54)
    on left: 2 3, on right: 2 49 50
dec (55)
    on left: 4 5 6, on right: 2
tydec (56)
    on left: 7, on right: 4
ty (57)
    on left: 8 9 10, on right: 7
tyfields (58)
    on left: 11 12, on right: 9 17 18
tyfieldlist (59)
    on left: 13 14, on right: 12 14
vardec (60)
    on left: 15 16, on right: 5
fundec (61)
    on left: 17 18, on right: 6
exp (62)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
    37 38 39 40 41 42 43 44 45 46 47 48 49 50 51, on right: 1 15 16
    17 18 21 25 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46
    47 51 55 56 57 58 59 60 61 62
lvalue (63)
    on left: 52 53 54, on right: 19 43 53
arridx (64)
    on left: 55 56, on right: 54 56
seq (65)
    on left: 57 58, on right: 21 49 58
parlist (66)
    on left: 59 60, on right: 27 60
itemlist (67)
    on left: 61 62, on right: 40 62


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lvalue   go to state 14
    arridx   go to state 15


state 1

   26 exp: ID . LPAREN RPAREN
   27    | ID . LPAREN parlist RPAREN
   40    | ID . LBRACE itemlist RBRACE
   41    | ID . LBRACE RBRACE
   42    | ID . LBRACK exp RBRACK OF exp
   52 lvalue: ID .
   55 arridx: ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 16
    LBRACK  shift, and go to state 17
    LBRACE  shift, and go to state 18

    $default  reduce using rule 52 (lvalue)


state 2

   24 exp: STRING .

    $default  reduce using rule 24 (exp)


state 3

   23 exp: INT .

    $default  reduce using rule 23 (exp)


state 4

   21 exp: LPAREN . exp SEMICOLON seq RPAREN
   22    | LPAREN . RPAREN
   51    | LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 19
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 20
    lvalue  go to state 14
    arridx  go to state 15


state 5

   25 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 21
    lvalue  go to state 14
    arridx  go to state 15


state 6

   44 exp: IF . exp THEN exp ELSE exp
   45    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 22
    lvalue  go to state 14
    arridx  go to state 15


state 7

   46 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 23
    lvalue  go to state 14
    arridx  go to state 15


state 8

   47 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 24


state 9

   49 exp: LET . decs IN seq END
   50    | LET . decs IN END

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    $default  reduce using rule 3 (decs)

    decs    go to state 28
    dec     go to state 29
    tydec   go to state 30
    vardec  go to state 31
    fundec  go to state 32


state 10

   48 exp: BREAK .

    $default  reduce using rule 48 (exp)


state 11

   20 exp: NIL .

    $default  reduce using rule 20 (exp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 33


state 13

    1 program: exp .
   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 1 (program)


state 14

   19 exp: lvalue .
   43    | lvalue . ASSIGN exp
   53 lvalue: lvalue . DOT ID

    DOT     shift, and go to state 46
    ASSIGN  shift, and go to state 47

    $default  reduce using rule 19 (exp)


state 15

   54 lvalue: arridx .
   56 arridx: arridx . LBRACK exp RBRACK

    LBRACK  shift, and go to state 48

    $default  reduce using rule 54 (lvalue)


state 16

   26 exp: ID LPAREN . RPAREN
   27    | ID LPAREN . parlist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 49
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 50
    lvalue   go to state 14
    arridx   go to state 15
    parlist  go to state 51


state 17

   42 exp: ID LBRACK . exp RBRACK OF exp
   55 arridx: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 52
    lvalue  go to state 14
    arridx  go to state 15


state 18

   40 exp: ID LBRACE . itemlist RBRACE
   41    | ID LBRACE . RBRACE

    ID      shift, and go to state 53
    RBRACE  shift, and go to state 54

    itemlist  go to state 55


state 19

   22 exp: LPAREN RPAREN .

    $default  reduce using rule 22 (exp)


state 20

   21 exp: LPAREN exp . SEMICOLON seq RPAREN
   28    | exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   51    | LPAREN exp . RPAREN

    SEMICOLON  shift, and go to state 56
    RPAREN     shift, and go to state 57
    PLUS       shift, and go to state 34
    MINUS      shift, and go to state 35
    TIMES      shift, and go to state 36
    DIVIDE     shift, and go to state 37
    EQ         shift, and go to state 38
    NEQ        shift, and go to state 39
    LT         shift, and go to state 40
    LE         shift, and go to state 41
    GT         shift, and go to state 42
    GE         shift, and go to state 43
    AND        shift, and go to state 44
    OR         shift, and go to state 45


state 21

   25 exp: MINUS exp .
   28    | exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    $default  reduce using rule 25 (exp)


state 22

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   44    | IF exp . THEN exp ELSE exp
   45    | IF exp . THEN exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45
    THEN    shift, and go to state 58


state 23

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   46    | WHILE exp . DO exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45
    DO      shift, and go to state 59


state 24

   47 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 60


state 25

   17 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   18       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 61


state 26

   15 vardec: VAR . ID ASSIGN exp
   16       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 62


state 27

    7 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 63


state 28

   49 exp: LET decs . IN seq END
   50    | LET decs . IN END

    IN  shift, and go to state 64


state 29

    2 decs: dec . decs

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    $default  reduce using rule 3 (decs)

    decs    go to state 65
    dec     go to state 29
    tydec   go to state 30
    vardec  go to state 31
    fundec  go to state 32


state 30

    4 dec: tydec .

    $default  reduce using rule 4 (dec)


state 31

    5 dec: vardec .

    $default  reduce using rule 5 (dec)


state 32

    6 dec: fundec .

    $default  reduce using rule 6 (dec)


state 33

    0 $accept: program $end .

    $default  accept


state 34

   28 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 66
    lvalue  go to state 14
    arridx  go to state 15


state 35

   29 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 67
    lvalue  go to state 14
    arridx  go to state 15


state 36

   30 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 68
    lvalue  go to state 14
    arridx  go to state 15


state 37

   31 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 69
    lvalue  go to state 14
    arridx  go to state 15


state 38

   32 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 70
    lvalue  go to state 14
    arridx  go to state 15


state 39

   33 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 71
    lvalue  go to state 14
    arridx  go to state 15


state 40

   35 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 72
    lvalue  go to state 14
    arridx  go to state 15


state 41

   37 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 73
    lvalue  go to state 14
    arridx  go to state 15


state 42

   34 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 74
    lvalue  go to state 14
    arridx  go to state 15


state 43

   36 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 75
    lvalue  go to state 14
    arridx  go to state 15


state 44

   38 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 76
    lvalue  go to state 14
    arridx  go to state 15


state 45

   39 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 77
    lvalue  go to state 14
    arridx  go to state 15


state 46

   53 lvalue: lvalue DOT . ID

    ID  shift, and go to state 78


state 47

   43 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 79
    lvalue  go to state 14
    arridx  go to state 15


state 48

   56 arridx: arridx LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 80
    lvalue  go to state 14
    arridx  go to state 15


state 49

   26 exp: ID LPAREN RPAREN .

    $default  reduce using rule 26 (exp)


state 50

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   59 parlist: exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 59 (parlist)


state 51

   27 exp: ID LPAREN parlist . RPAREN
   60 parlist: parlist . COMMA exp

    COMMA   shift, and go to state 81
    RPAREN  shift, and go to state 82


state 52

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   42    | ID LBRACK exp . RBRACK OF exp
   55 arridx: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 83
    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45


state 53

   61 itemlist: ID . EQ exp

    EQ  shift, and go to state 84


state 54

   41 exp: ID LBRACE RBRACE .

    $default  reduce using rule 41 (exp)


state 55

   40 exp: ID LBRACE itemlist . RBRACE
   62 itemlist: itemlist . COMMA ID EQ exp

    COMMA   shift, and go to state 85
    RBRACE  shift, and go to state 86


state 56

   21 exp: LPAREN exp SEMICOLON . seq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 87
    lvalue  go to state 14
    arridx  go to state 15
    seq     go to state 88


state 57

   51 exp: LPAREN exp RPAREN .

    $default  reduce using rule 51 (exp)


state 58

   44 exp: IF exp THEN . exp ELSE exp
   45    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 89
    lvalue  go to state 14
    arridx  go to state 15


state 59

   46 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 90
    lvalue  go to state 14
    arridx  go to state 15


state 60

   47 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 91
    lvalue  go to state 14
    arridx  go to state 15


state 61

   17 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   18       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 92


state 62

   15 vardec: VAR ID . ASSIGN exp
   16       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 93
    ASSIGN  shift, and go to state 94


state 63

    7 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 95


state 64

   49 exp: LET decs IN . seq END
   50    | LET decs IN . END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    END     shift, and go to state 96
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 87
    lvalue  go to state 14
    arridx  go to state 15
    seq     go to state 97


state 65

    2 decs: dec decs .

    $default  reduce using rule 2 (decs)


state 66

   28 exp: exp . PLUS exp
   28    | exp PLUS exp .
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    $default  reduce using rule 28 (exp)


state 67

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   29    | exp MINUS exp .
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    $default  reduce using rule 29 (exp)


state 68

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   30    | exp TIMES exp .
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    $default  reduce using rule 30 (exp)


state 69

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   31    | exp DIVIDE exp .
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    $default  reduce using rule 31 (exp)


state 70

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   32    | exp EQ exp .
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 32 (exp)


state 71

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   33    | exp NEQ exp .
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 33 (exp)


state 72

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   35    | exp LT exp .
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 35 (exp)


state 73

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   37    | exp LE exp .
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 37 (exp)


state 74

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   34    | exp GT exp .
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 34 (exp)


state 75

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   36    | exp GE exp .
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 36 (exp)


state 76

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   38    | exp AND exp .
   39    | exp . OR exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43

    $default  reduce using rule 38 (exp)


state 77

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   39    | exp OR exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44

    $default  reduce using rule 39 (exp)


state 78

   53 lvalue: lvalue DOT ID .

    $default  reduce using rule 53 (lvalue)


state 79

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   43    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 43 (exp)


state 80

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   56 arridx: arridx LBRACK exp . RBRACK

    RBRACK  shift, and go to state 98
    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45


state 81

   60 parlist: parlist COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 99
    lvalue  go to state 14
    arridx  go to state 15


state 82

   27 exp: ID LPAREN parlist RPAREN .

    $default  reduce using rule 27 (exp)


state 83

   42 exp: ID LBRACK exp RBRACK . OF exp
   55 arridx: ID LBRACK exp RBRACK .

    OF  shift, and go to state 100

    $default  reduce using rule 55 (arridx)


state 84

   61 itemlist: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 101
    lvalue  go to state 14
    arridx  go to state 15


state 85

   62 itemlist: itemlist COMMA . ID EQ exp

    ID  shift, and go to state 102


state 86

   40 exp: ID LBRACE itemlist RBRACE .

    $default  reduce using rule 40 (exp)


state 87

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   57 seq: exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 57 (seq)


state 88

   21 exp: LPAREN exp SEMICOLON seq . RPAREN
   58 seq: seq . SEMICOLON exp

    SEMICOLON  shift, and go to state 103
    RPAREN     shift, and go to state 104


state 89

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   44    | IF exp THEN exp . ELSE exp
   45    | IF exp THEN exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45
    ELSE    shift, and go to state 105

    ELSE      [reduce using rule 45 (exp)]
    $default  reduce using rule 45 (exp)


state 90

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   46    | WHILE exp DO exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 46 (exp)


state 91

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   47    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45
    TO      shift, and go to state 106


state 92

   17 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   18       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 107

    $default  reduce using rule 11 (tyfields)

    tyfields     go to state 108
    tyfieldlist  go to state 109


state 93

   16 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 110


state 94

   15 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 111
    lvalue  go to state 14
    arridx  go to state 15


state 95

    7 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 112
    LBRACE  shift, and go to state 113
    ARRAY   shift, and go to state 114

    ty  go to state 115


state 96

   50 exp: LET decs IN END .

    $default  reduce using rule 50 (exp)


state 97

   49 exp: LET decs IN seq . END
   58 seq: seq . SEMICOLON exp

    SEMICOLON  shift, and go to state 103
    END        shift, and go to state 116


state 98

   56 arridx: arridx LBRACK exp RBRACK .

    $default  reduce using rule 56 (arridx)


state 99

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   60 parlist: parlist COMMA exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 60 (parlist)


state 100

   42 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 117
    lvalue  go to state 14
    arridx  go to state 15


state 101

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   61 itemlist: ID EQ exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 61 (itemlist)


state 102

   62 itemlist: itemlist COMMA ID . EQ exp

    EQ  shift, and go to state 118


state 103

   58 seq: seq SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 119
    lvalue  go to state 14
    arridx  go to state 15


state 104

   21 exp: LPAREN exp SEMICOLON seq RPAREN .

    $default  reduce using rule 21 (exp)


state 105

   44 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 120
    lvalue  go to state 14
    arridx  go to state 15


state 106

   47 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 121
    lvalue  go to state 14
    arridx  go to state 15


state 107

   13 tyfieldlist: ID . COLON ID

    COLON  shift, and go to state 122


state 108

   17 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   18       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 123


state 109

   12 tyfields: tyfieldlist .
   14 tyfieldlist: tyfieldlist . COMMA ID COLON ID

    COMMA  shift, and go to state 124

    $default  reduce using rule 12 (tyfields)


state 110

   16 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 125


state 111

   15 vardec: VAR ID ASSIGN exp .
   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 15 (vardec)


state 112

    8 ty: ID .

    $default  reduce using rule 8 (ty)


state 113

    9 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 107

    $default  reduce using rule 11 (tyfields)

    tyfields     go to state 126
    tyfieldlist  go to state 109


state 114

   10 ty: ARRAY . OF ID

    OF  shift, and go to state 127


state 115

    7 tydec: TYPE ID EQ ty .

    $default  reduce using rule 7 (tydec)


state 116

   49 exp: LET decs IN seq END .

    $default  reduce using rule 49 (exp)


state 117

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   42    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 42 (exp)


state 118

   62 itemlist: itemlist COMMA ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 128
    lvalue  go to state 14
    arridx  go to state 15


state 119

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   58 seq: seq SEMICOLON exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 58 (seq)


state 120

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   44    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 44 (exp)


state 121

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   47    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45
    DO      shift, and go to state 129


state 122

   13 tyfieldlist: ID COLON . ID

    ID  shift, and go to state 130


state 123

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   18       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 131
    EQ     shift, and go to state 132


state 124

   14 tyfieldlist: tyfieldlist COMMA . ID COLON ID

    ID  shift, and go to state 133


state 125

   16 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 134
    lvalue  go to state 14
    arridx  go to state 15


state 126

    9 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 135


state 127

   10 ty: ARRAY OF . ID

    ID  shift, and go to state 136


state 128

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   62 itemlist: itemlist COMMA ID EQ exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 62 (itemlist)


state 129

   47 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 137
    lvalue  go to state 14
    arridx  go to state 15


state 130

   13 tyfieldlist: ID COLON ID .

    $default  reduce using rule 13 (tyfieldlist)


state 131

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 138


state 132

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 139
    lvalue  go to state 14
    arridx  go to state 15


state 133

   14 tyfieldlist: tyfieldlist COMMA ID . COLON ID

    COLON  shift, and go to state 140


state 134

   16 vardec: VAR ID COLON ID ASSIGN exp .
   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 16 (vardec)


state 135

    9 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 9 (ty)


state 136

   10 ty: ARRAY OF ID .

    $default  reduce using rule 10 (ty)


state 137

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp
   47    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 47 (exp)


state 138

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 141


state 139

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .
   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 17 (fundec)


state 140

   14 tyfieldlist: tyfieldlist COMMA ID COLON . ID

    ID  shift, and go to state 142


state 141

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 143
    lvalue  go to state 14
    arridx  go to state 15


state 142

   14 tyfieldlist: tyfieldlist COMMA ID COLON ID .

    $default  reduce using rule 14 (tyfieldlist)


state 143

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .
   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . GT exp
   35    | exp . LT exp
   36    | exp . GE exp
   37    | exp . LE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    LE      shift, and go to state 41
    GT      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 18 (fundec)
